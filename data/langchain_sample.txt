
# LangChain Documentation

LangChain is a framework for developing applications powered by language models. It enables applications that:
- Are context-aware: connect a language model to sources of context (prompt instructions, few-shot examples, content to ground its response in, etc.)
- Reason: rely on a language model to reason (about how to answer based on provided context, what actions to take, etc.)

## Modules

LangChain provides modules that help with:
- Model I/O: Interface with language models
- Retrieval: Interface with application-specific data
- Agents: Let chains choose which tools to use given high-level directives

## Key Concepts

### Chains
Chains go beyond a single LLM call and involve sequences of calls (whether to an LLM or a different utility). LangChain provides a standard interface for chains, and several implementations of chains for different use cases.

### Agents
Agents involve an LLM making decisions about which actions to take, taking that action, seeing an observation, and repeating until done. LangChain provides a standard interface for agents, and several implementations of agents.

### Memory
Memory refers to persisting state between calls of a chain/agent. LangChain provides a standard interface for memory, and several implementations of memory for different use cases.

### Callbacks
Callbacks allow you to log and stream intermediate steps of any chain, making it easy to observe, debug, and evaluate the internals of an application.

### Document Loaders
Document loaders load documents from many different sources. LangChain provides a standard interface for document loaders, and several implementations.

### Text Splitters
Text splitters split documents into chunks. LangChain provides several implementations of text splitters.

### Retrievers
Retrievers retrieve documents from a source. LangChain provides a standard interface for retrievers, and several implementations.

### Embeddings
Embedding models convert text into numerical representations. LangChain integrates with various embedding models.

### Vector Stores
Vector stores store embeddings and allow for searching based on similarity. LangChain provides a standard interface for vector stores, and several implementations.
            